# ModynConfig.cmake - Modyn Package Configuration
# This file is generated by cmake from ModynConfig.cmake.in

set(MODYN_VERSION "@MODYN_VERSION@")
set(MODYN_MAJOR_VERSION "@MODYN_MAJOR_VERSION@")
set(MODYN_MINOR_VERSION "@MODYN_MINOR_VERSION@")
set(MODYN_PATCH_VERSION "@MODYN_PATCH_VERSION@")

# 构建配置
set(MODYN_BUILD_TYPE "@CMAKE_BUILD_TYPE@")
set(MODYN_COMPILER_ID "@CMAKE_C_COMPILER_ID@")
set(MODYN_COMPILER_VERSION "@CMAKE_C_COMPILER_VERSION@")

# 功能选项
set(MODYN_ENABLE_RKNN @ENABLE_RKNN@)
set(MODYN_ENABLE_OPENVINO @ENABLE_OPENVINO@)
set(MODYN_ENABLE_TENSORRT @ENABLE_TENSORRT@)
set(MODYN_ENABLE_API @ENABLE_API@)
set(MODYN_ENABLE_OPENCV @ENABLE_OPENCV@)
set(MODYN_ENABLE_PLUGINS @ENABLE_PLUGINS@)
set(MODYN_BUILD_PLUGINS @BUILD_PLUGINS@)

# 安装路径
set(MODYN_INSTALL_PREFIX "@CMAKE_INSTALL_PREFIX@")
set(MODYN_INCLUDE_DIR "@CMAKE_INSTALL_PREFIX@/include")
set(MODYN_LIBRARY_DIR "@CMAKE_INSTALL_PREFIX@/lib")
set(MODYN_PLUGIN_DIR "@PLUGIN_INSTALL_DIR@")

# 导入目标
include(CMakeFindDependencyMacro)

# 查找依赖
find_dependency(Threads REQUIRED)
if(MODYN_ENABLE_OPENCV)
    find_dependency(OpenCV REQUIRED)
endif()

# 导入Modyn目标
if(NOT TARGET Modyn::modyn_core)
    include("${CMAKE_CURRENT_LIST_DIR}/ModynTargets.cmake")
endif()

# 设置变量以便下游项目使用
set(Modyn_FOUND TRUE)
set(MODYN_LIBRARIES Modyn::modyn_core)
set(MODYN_INCLUDE_DIRS ${MODYN_INCLUDE_DIR})

# 状态信息
message(STATUS "Found Modyn: ${MODYN_VERSION}")
message(STATUS "Modyn library directory: ${MODYN_LIBRARY_DIR}")
message(STATUS "Modyn include directory: ${MODYN_INCLUDE_DIR}")
if(MODYN_ENABLE_PLUGINS)
    message(STATUS "Modyn plugin directory: ${MODYN_PLUGIN_DIR}")
endif()

# 版本检查宏
macro(check_modyn_version required_version)
    if(MODYN_VERSION VERSION_LESS required_version)
        message(FATAL_ERROR "Modyn version ${MODYN_VERSION} is less than required version ${required_version}")
    endif()
endmacro()

# 插件查找辅助函数
if(MODYN_ENABLE_PLUGINS)
    function(find_modyn_plugin plugin_name)
        set(plugin_path "${MODYN_PLUGIN_DIR}/lib${plugin_name}.so")
        if(EXISTS "${plugin_path}")
            set(${plugin_name}_FOUND TRUE PARENT_SCOPE)
            set(${plugin_name}_LIBRARY "${plugin_path}" PARENT_SCOPE)
        else()
            set(${plugin_name}_FOUND FALSE PARENT_SCOPE)
        endif()
    endfunction()
endif() 